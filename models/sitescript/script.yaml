add:
    name: 'Add'
    description: 'Add an int to a var'
    fields:
        _title:
            label: 'Add'
            type: section
        arg1:
            label: Arg1
            type: text
            placeholder: '$EXAMPLE'
            span: auto
        arg2:
            label: Arg2
            type: text
            placeholder: '5'
            span: auto

sub:
    name: 'Sub'
    description: 'Subtract an int from a var'
    fields:
        _title:
            label: 'Sub'
            type: section
        arg1:
            label: Arg1
            type: text
            placeholder: '$EXAMPLE'
            span: auto
        arg2:
            label: Arg2
            type: text
            placeholder: '5'
            span: auto

set:
    name: 'Set'
    description: 'Create a variable with a value'
    fields:
        _title:
            label: 'Set'
            type: section
        name:
            label: Name
            type: text
            placeholder: 'EXAMPLE'
            span: auto
        value:
            label: Value
            type: text
            placeholder: '5'
            span: auto

nav:
    name: 'Navigate'
    description: 'Tell the browser driver to navigate to a url'
    fields:
        _title:
            label: 'Navigate'
            type: section
        url:
            label: Url
            type: text
            placeholder: 'https://example.com'
            span: full

refresh:
    name: 'Refresh'
    description: 'Reloads the current page'
    fields:
        _title:
            label: 'Refresh'
            type: section

click:
    name: 'Click'
    description: 'Tell the browser driver to click on an element'
    fields:
        _title:
            label: 'Click'
            type: section
        selector:
            label: 'Selector'
            type: text
            placeholder: '#my-target'
            span: full
        allowJsFallback:
            label: 'Allow Javascript Click Emulation Fallback'
            type: checkbox
            default: '1'
            span: full

moveMouse:
    name: 'Move Mouse'
    description: 'Tell the browser driver to move the mouse to an element'
    fields:
        _title:
            label: 'Move Mouse'
            type: section
        selector:
            label: 'Selector'
            type: text
            placeholder: '#my-target'
            span: full

screenshot:
    name: 'Screenshot'
    description: 'Tell the browser driver to take a screenshot with the specified name'
    fields:
        _title:
            label: 'Screenshot'
            type: section
        label:
            label: 'Label'
            type: text
            placeholder: 'Example Test'
            span: full

scroll:
    name: 'Scroll'
    description: 'Tell the browser driver to scroll'
    fields:
        _title:
            label: 'Scroll'
            type: section
        x:
            label: 'Scroll X'
            type: number
            placeholder: '5'
            span: auto
        y:
            label: 'Scroll Y'
            type: number
            placeholder: '5'
            span: auto

scrollTo:
    name: 'Scroll To'
    description: 'Tell the browser driver to scroll to an element'
    fields:
        _title:
            label: 'Move Mouse'
            type: section
        selector:
            label: 'Selector'
            type: text
            placeholder: '#my-target'
            span: auto
        offset:
            label: 'Offset'
            type: number
            placeholder: '5'
            span: auto

sendKeys:
    name: 'Send Keys'
    description: 'Tell the browser driver to send the string as if entered from a keyboard'
    fields:
        _title:
            label: 'Send Keys'
            type: section
        keys:
            label: 'Keys'
            type: text
            placeholder: 'Hello World'
            span: full

wait:
    name: 'Wait'
    description: 'Tell the task to wait for ? seconds'
    fields:
        _title:
            label: 'Wait'
            type: section
        seconds:
            label: 'Seconds'
            type: number
            placeholder: '5'
            span: full

ifStatement:
    name: 'If'
    description: 'If conditional logic statement'
    fields:
        _title:
            label: 'IF'
            type: section
        condition:
            label: 'Condition'
            type: repeater
            groups: ~/plugins/jaxwilko/hugo/models/sitescript/script.yaml
            maxItems: 1
        invert:
            label: 'Invert logic'
            type: checkbox
        then:
            label: 'Then'
            type: repeater
            groups: ~/plugins/jaxwilko/hugo/models/sitescript/script.yaml
            span: left
        else:
            label: 'Else'
            type: repeater
            groups: ~/plugins/jaxwilko/hugo/models/sitescript/script.yaml
            span: right

exit:
    name: 'Exit'
    description: 'Exit the script'
    fields:
        _title:
            label: 'Exit'
            type: section
        status:
            label: 'Status'
            type: number
            placeholder: '1'
            comment: '0 is good, anything else is bad'
            span: full

exec:
    name: 'Execute Javascript'
    description: 'Tell the browser driver to execute custom js code'
    fields:
        _title:
            label: 'Execute Javascript'
            type: section
        code:
            label: 'Code'
            type: codeeditor
            language: javascript
            span: full


#    'WAIT'        => [
#    'method' => 'wait',
#    'usage'  => 'WAIT <int>',
#    'desc'   => 'Tell the task to wait for ? seconds'
#],
#    'GETINPUTVAL' => [
#    'method' => 'getInputValue',
#    'usage'  => 'GETINPUTVAL "<css selector>"',
#    'desc'   => 'Returns the value of the specified input'
#],
#    'SETINPUTVAL' => [
#    'method' => 'setInputValue',
#    'usage'  => 'SETINPUTVAL "<css selector>" "value"',
#    'desc'   => 'Set the value of a specified input'
#],
#    'GETATTRIBUTE' => [
#    'method' => 'getElementAttribute',
#    'usage'  => 'GETATTRIBUTE "<css selector>" "attribute"',
#    'desc'   => 'Returns the value of the specified element attribute'
#],
#    'SETATTRIBUTE' => [
#    'method' => 'setElementAttribute',
#    'usage'  => 'SETATTRIBUTE "<css selector>" "attribute" "value"',
#    'desc'   => 'Set the value of a specified element attribute'
#],
#    'LOG' => [
#    'method' => 'log',
#    'usage'  => 'LOG <string>',
#    'desc'   => 'Log a message'
#],
#    'SHELL' => [
#    'method' => 'shellable',
#    'usage'  => 'SHELL',
#    'desc'   => 'Enter a php repl (will only work in cli mode)'
#],
#    'DUMPCONSOLE' => [
#    'method' => 'dumpConsoleLogs',
#    'usage'  => 'DUMPCONSOLE [1]',
#    'desc'   => 'Return the WebDriver console logs (1 to print to stdout, will only work in cli mode)'
#],
#    'DELCOOKIES' => [
#    'method' => 'deleteCookies',
#    'usage'  => 'DELCOOKIES',
#    'desc'   => 'Deletes all cookies on current site'
#],

#    'VISIBLE'     => [
#    'method' => 'visible',
#    'usage'  => 'VISIBLE "<css selector>"',
#    'desc'   => 'Return the visibility of an element'
#],
#    'FINISH'      => [
#    'method' => 'finish',
#    'usage'  => 'FINISH <int result> <int score> [<string log>]',
#    'desc'   => 'Finish a task'
#],
#    'EXEC'        => [
#    'method' => 'script',
#    'usage'  => 'EXEC "<js code>"',
#    'desc'   => 'Tell the browser driver to execute custom js code'
#],
#    'ECHO'        => [
#    'method' => 'echoStatement',
#    'usage'  => 'ECHO <str/var/expression>',
#    'desc'   => 'Print the specified value'
#],

#    'UWAIT'        => [
#    'method' => 'uwait',
#    'usage'  => 'UWAIT <int>',
#    'desc'   => 'Tell the task to wait for ? milliseconds'
#],
#    'WAITFOR'        => [
#    'method' => 'waitFor',
#    'usage'  => 'WAITFOR "<css selector>" [<int timeout>]',
#    'desc'   => 'Wait for an element to be visible and drawn'
#],
#    'ELMTEXT'    => [
#    'method' => 'elementText',
#    'usage'  => 'ELMTEXT "<css selector>"',
#    'desc'   => 'Return the text of an element'
#],
#    'SPRINTF'    => [
#    'method' => 'stringPrintFormat',
#    'usage'  => 'SPRINTF "format" <arg1> <arg2>...',
#    'desc'   => 'Return string in format'
#],
#    'EQ'         => [
#    'method' => 'eq',
#    'usage'  => 'EQ <arg1> <arg2>',
#    'desc'   => 'Return true if 2 args are equal'
#],
